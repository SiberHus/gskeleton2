import com.siberhus.gskeleton.config.SysConfig
import java.util.regex.Pattern
import com.siberhus.gskeleton.base.Ipv4Filter
import com.siberhus.gskeleton.web.UserSessionMonitor
import org.apache.shiro.SecurityUtils
import com.siberhus.gskeleton.security.SecuritySession

/**
 * Generated by the Shiro plugin. This filters class protects all URLs
 * via access control by convention.
 */
class SecurityFilters {

	def userConfigService
	
	def filters = {
		all(uri: "/**") {
			before = {
				if(SysConfig.get('security.ipv4Filter')){
					String addr = request.getRemoteAddr()
					addr = addr=='0:0:0:0:0:0:0:1'?'127.0.0.1':addr
					boolean secure = request.isSecure()
					if(addr =='127.0.0.1'){
						def localAccess = SysConfig.get('security.ipv4Filter.localhost')
						if(!localAccess){
							render(text:'The request is not allowed due to IPv4 Filter')
							return false
						}
					}else{
						boolean allowAccess = !SysConfig.get('security.ipv4Filter.definedOnly')
						for(Ipv4Filter filter in Ipv4Filter.list(sort:'matchingSeq', order:'asc')){
							Pattern pattern = filter.toPattern()
							if(!pattern.matcher(addr).matches()){
								allowAccess = false
								continue
							}
							if(secure && filter.https){
								allowAccess = true
								break
							}
							if(!secure && filter.http){
								allowAccess = true
								break
							}
							allowAccess = false
							break
						}
						if(!allowAccess){
							render(text:'The request is not allowed due to IPv4 Filter')
							return false
						}
					}
				}
				// Ignore direct views (e.g. the default main index page).
				if (!controllerName) return true
				// Access control by convention.
				boolean allowed
				if(SysConfig.get('security.authc.rememberMe')){
					allowed = accessControl(auth: false)
					if(allowed){
						UserSessionMonitor userSessMon = SecuritySession.getUserSessionMonitor(session)
						if(userSessMon==null){
							String username = SecurityUtils.getSubject().principal
							if(username!=null){
								String language = userConfigService.getValue('language')
								userSessMon = new UserSessionMonitor(username, language, request)
								SecuritySession.setUserSessionMonitor(session, userSessMon)
							}
						}
					}

				}else{
					allowed = accessControl()
				}
				//Audit
				
				return allowed
			}
		}
	}
	
}
